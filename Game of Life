class Solution {
public:

    void gameOfLife(vector<vector<int>>& board) {
        
        int n = board.size();
        int m = board[0].size();

        int dx[8] = {0, 0, -1, 1, 1, 1, -1, -1};
        int dy[8] = {-1, 1, 0, 0, 1, -1, 1, -1};

        auto isValid = [&] (int x, int y) {
            return x >= 0 && y >= 0 && x < n && y < m;
        };

        for(int i = 0; i < n; i++) {
            for(int j = 0; j < m; j++) {

                int nbr = 0;
                
                for(int k = 0; k < 8; k++) {
                    int x = i + dx[k];
                    int y = j + dy[k];
                    if(!isValid(x, y)) continue;
                    if(board[x][y] & 1) nbr++;
                }

                bool living = 0;
                if(board[i][j] == 1 && nbr == 2) living = 1;
                else if(nbr == 3) living = 1;

                if(living) board[i][j] |= 2;

            }
        }

        for(int i = 0; i < n; i++) {
            for(int j = 0; j < m; j++) {
                board[i][j] >>= 1;
            }
        }

    }
};
